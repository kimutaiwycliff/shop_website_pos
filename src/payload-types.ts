/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    pages: Page;
    posts: Post;
    media: Media;
    categories: Category;
    users: User;
    products: Product;
    orders: Order;
    brands: Brand;
    customers: Customer;
    inventory: Inventory;
    transactions: Transaction;
    cart: Cart;
    redirects: Redirect;
    forms: Form;
    'form-submissions': FormSubmission;
    search: Search;
    'payload-jobs': PayloadJob;
    'payload-folders': FolderInterface;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {
    'payload-folders': {
      documentsAndFolders: 'payload-folders' | 'categories';
    };
  };
  collectionsSelect: {
    pages: PagesSelect<false> | PagesSelect<true>;
    posts: PostsSelect<false> | PostsSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    products: ProductsSelect<false> | ProductsSelect<true>;
    orders: OrdersSelect<false> | OrdersSelect<true>;
    brands: BrandsSelect<false> | BrandsSelect<true>;
    customers: CustomersSelect<false> | CustomersSelect<true>;
    inventory: InventorySelect<false> | InventorySelect<true>;
    transactions: TransactionsSelect<false> | TransactionsSelect<true>;
    cart: CartSelect<false> | CartSelect<true>;
    redirects: RedirectsSelect<false> | RedirectsSelect<true>;
    forms: FormsSelect<false> | FormsSelect<true>;
    'form-submissions': FormSubmissionsSelect<false> | FormSubmissionsSelect<true>;
    search: SearchSelect<false> | SearchSelect<true>;
    'payload-jobs': PayloadJobsSelect<false> | PayloadJobsSelect<true>;
    'payload-folders': PayloadFoldersSelect<false> | PayloadFoldersSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    header: Header;
    footer: Footer;
  };
  globalsSelect: {
    header: HeaderSelect<false> | HeaderSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: {
      schedulePublish: TaskSchedulePublish;
      inline: {
        input: unknown;
        output: unknown;
      };
    };
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  title: string;
  hero: {
    type: 'none' | 'highImpact' | 'mediumImpact' | 'lowImpact';
    mediaType?: ('slider' | 'single' | 'video') | null;
    richText?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    slides?:
      | {
          image: number | Media;
          mobileImage?: (number | null) | Media;
          title?: string | null;
          subtitle?: string | null;
          links?:
            | {
                link: {
                  type?: ('reference' | 'custom') | null;
                  newTab?: boolean | null;
                  reference?:
                    | ({
                        relationTo: 'pages';
                        value: number | Page;
                      } | null)
                    | ({
                        relationTo: 'posts';
                        value: number | Post;
                      } | null);
                  url?: string | null;
                  label: string;
                  /**
                   * Choose how the link should be rendered.
                   */
                  appearance?: ('default' | 'outline') | null;
                };
                id?: string | null;
              }[]
            | null;
          textPosition?: ('left' | 'center' | 'right') | null;
          id?: string | null;
        }[]
      | null;
    links?:
      | {
          link: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: number | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: number | Post;
                } | null);
            url?: string | null;
            label: string;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline') | null;
          };
          id?: string | null;
        }[]
      | null;
    media?: (number | null) | Media;
    autoplay?: boolean | null;
    autoplayDelay?: number | null;
  };
  layout: (
    | CallToActionBlock
    | ContentBlock
    | MediaBlock
    | ArchiveBlock
    | FormBlock
    | DataTableBlock
    | CategoryShowcaseBlock
    | ProductShowcaseBlock
    | ProductGridBlock
    | ShoppingCartBlock
    | CheckoutBlock
    | POSBlock
    | AnalyticsDashboardBlock
    | InventoryManagementBlock
    | OrderConfirmationBlock
  )[];
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt?: string | null;
  caption?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    square?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    small?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    medium?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    large?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    xlarge?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    og?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
  id: number;
  title: string;
  heroImage?: (number | null) | Media;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  relatedPosts?: (number | Post)[] | null;
  categories?: (number | Category)[] | null;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  authors?: (number | User)[] | null;
  populatedAuthors?:
    | {
        id?: string | null;
        name?: string | null;
      }[]
    | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: number;
  title: string;
  slug?: string | null;
  slugLock?: boolean | null;
  parent?: (number | null) | Category;
  breadcrumbs?:
    | {
        doc?: (number | null) | Category;
        url?: string | null;
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  folder?: (number | null) | FolderInterface;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-folders".
 */
export interface FolderInterface {
  id: number;
  name: string;
  folder?: (number | null) | FolderInterface;
  documentsAndFolders?: {
    docs?: (
      | {
          relationTo?: 'payload-folders';
          value: number | FolderInterface;
        }
      | {
          relationTo?: 'categories';
          value: number | Category;
        }
    )[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  folderType?: 'categories'[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  active?: boolean | null;
  name?: string | null;
  avatar?: (number | null) | Media;
  roles?: ('admin' | 'editor' | 'user')[] | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock".
 */
export interface CallToActionBlock {
  richText?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  links?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'cta';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock".
 */
export interface ContentBlock {
  columns?:
    | {
        size?: ('oneThird' | 'half' | 'twoThirds' | 'full') | null;
        richText?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        enableLink?: boolean | null;
        link?: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'content';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock".
 */
export interface MediaBlock {
  media: number | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'mediaBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArchiveBlock".
 */
export interface ArchiveBlock {
  introContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  populateBy?: ('collection' | 'selection') | null;
  relationTo?: 'posts' | null;
  categories?: (number | Category)[] | null;
  limit?: number | null;
  selectedDocs?:
    | {
        relationTo: 'posts';
        value: number | Post;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'archive';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock".
 */
export interface FormBlock {
  form: number | Form;
  enableIntro?: boolean | null;
  introContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'formBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms".
 */
export interface Form {
  id: number;
  title: string;
  fields?:
    | (
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            defaultValue?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'checkbox';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'country';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'email';
          }
        | {
            message?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'message';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'number';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            placeholder?: string | null;
            options?:
              | {
                  label: string;
                  value: string;
                  id?: string | null;
                }[]
              | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'select';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'state';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'text';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textarea';
          }
      )[]
    | null;
  submitButtonLabel?: string | null;
  /**
   * Choose whether to display an on-page message or redirect to a different page after they submit the form.
   */
  confirmationType?: ('message' | 'redirect') | null;
  confirmationMessage?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  redirect?: {
    url: string;
  };
  /**
   * Send custom emails when the form submits. Use comma separated lists to send the same email to multiple recipients. To reference a value from this form, wrap that field's name with double curly brackets, i.e. {{firstName}}. You can use a wildcard {{*}} to output all data and {{*:table}} to format it as an HTML table in the email.
   */
  emails?:
    | {
        emailTo?: string | null;
        cc?: string | null;
        bcc?: string | null;
        replyTo?: string | null;
        emailFrom?: string | null;
        subject: string;
        /**
         * Enter the message that should be sent in this email.
         */
        message?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "DataTableBlock".
 */
export interface DataTableBlock {
  targetCollection: 'customers' | 'posts' | 'pages' | 'categories';
  filters?:
    | {
        column: string;
        title: string;
        options?:
          | {
              label: string;
              value: string;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  defaultPageSize?: number | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'dataTable';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CategoryShowcaseBlock".
 */
export interface CategoryShowcaseBlock {
  title: string;
  subtitle?: string | null;
  categories?:
    | {
        category: number | Category;
        customImage?: (number | null) | Media;
        customTitle?: string | null;
        featured?: boolean | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'categoryShowcase';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ProductShowcaseBlock".
 */
export interface ProductShowcaseBlock {
  title: string;
  subtitle?: string | null;
  layout?: ('grid' | 'featured' | 'carousel') | null;
  products: (number | Product)[];
  showPricing?: boolean | null;
  showDescription?: boolean | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'productShowcase';
}
/**
 * Manage all products in your store
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products".
 */
export interface Product {
  id: number;
  /**
   * The name of your product as it will appear to customers (max 100 characters)
   */
  title: string;
  slug?: string | null;
  slugLock?: boolean | null;
  /**
   * Assign this product to one or more categories
   */
  categories?: (number | Category)[] | null;
  /**
   * Select the brand for this product
   */
  brand?: (number | null) | Brand;
  /**
   * Detailed description of the product. Include key features, benefits, and specifications.
   */
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * Upload high-quality product images (min 800x800px). First image will be used as the main product image.
   */
  images: {
    /**
     * Upload a high-resolution product image
     */
    image: number | Media;
    /**
     * Describe this image for accessibility and SEO (e.g., "Red cotton t-shirt front view")
     */
    alt: string;
    /**
     * The primary image will be featured as the main product image
     */
    isPrimary?: boolean | null;
    id?: string | null;
  }[];
  /**
   * Add all available color variations for this product
   */
  colors?:
    | {
        /**
         * e.g., Navy Blue, Black, White
         */
        colorName: string;
        /**
         * Hex color code (e.g., #1A365D for navy blue)
         */
        colorCode?: string | null;
        /**
         * Image showing this color variant
         */
        colorImage?: (number | null) | Media;
        id?: string | null;
      }[]
    | null;
  /**
   * Sizes available for this product
   */
  sizes?:
    | {
        sizeName: string;
        sizeCode?:
          | (
              | 'XS'
              | 'S'
              | 'M'
              | 'L'
              | 'XL'
              | 'XXL'
              | 'XXXL'
              | '26'
              | '28'
              | '30'
              | '32'
              | '34'
              | '36'
              | '38'
              | '40'
              | '42'
              | '44'
              | '46'
              | '2T'
              | '3T'
              | '4T'
              | '5T'
              | '6'
              | '7'
              | '8'
              | '10'
              | '12'
              | '14'
              | '16'
            )
          | null;
        inStock?: boolean | null;
        stockQuantity?: number | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Unique product identifier
   */
  sku: string;
  /**
   * Product barcode number (will be auto-generated if empty)
   */
  barcode?: string | null;
  /**
   * Auto-generated UPC-A barcode image (generated from SKU)
   */
  barcodeImage?: (number | null) | Media;
  /**
   * Your cost for this product
   */
  costPrice: number;
  /**
   * Price customers will pay
   */
  price: number;
  /**
   * Original price before discount (optional)
   */
  originalPrice?: number | null;
  /**
   * VAT/tax rate applied to this product
   */
  taxRate?: number | null;
  /**
   * Maximum discount percentage allowed for this product (0-100%)
   */
  maxDiscountPercent?: number | null;
  /**
   * Available items in stock
   */
  inStock: number;
  /**
   * Get notified when stock reaches this level
   */
  lowStockThreshold?: number | null;
  /**
   * Enable stock tracking for this product
   */
  trackInventory?: boolean | null;
  /**
   * Current status of the product
   */
  status?: ('published' | 'draft' | 'out-of-stock') | null;
  /**
   * Select the currency for this product
   */
  currency?: ('KES' | 'USD' | 'EUR') | null;
  /**
   * Product weight for shipping
   */
  weight?: number | null;
  /**
   * Product dimensions (L × W × H)
   */
  dimensions?: {
    length?: number | null;
    width?: number | null;
    height?: number | null;
  };
  /**
   * Select a shipping class for this product
   */
  shippingClass?: ('standard' | 'express' | 'oversized' | 'fragile') | null;
  /**
   * Special instructions for shipping this product
   */
  shippingNotes?: string | null;
  /**
   * Optimize how your product appears in search engines
   */
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * Manage brand information and settings
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "brands".
 */
export interface Brand {
  id: number;
  /**
   * Brand name as it appears to customers
   */
  name: string;
  slug?: string | null;
  slugLock?: boolean | null;
  /**
   * Brief description of the brand
   */
  description?: string | null;
  /**
   * Brand logo (recommended: square format, min 200x200px)
   */
  logo: number | Media;
  /**
   * Brand website URL
   */
  website?: string | null;
  /**
   * Only active brands will be displayed on the website
   */
  isActive?: boolean | null;
  contact?: {
    email?: string | null;
    phone?: string | null;
    address?: {
      street?: string | null;
      city?: string | null;
      country?: string | null;
    };
  };
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ProductGridBlock".
 */
export interface ProductGridBlock {
  /**
   * Optional title for the product grid section
   */
  title?: string | null;
  /**
   * Optional description text
   */
  description?: string | null;
  displayMode: 'featured' | 'latest' | 'bestsellers' | 'sale' | 'category' | 'brand' | 'manual';
  /**
   * Select categories to display products from
   */
  categories?: (number | Category)[] | null;
  /**
   * Select brands to display products from
   */
  brands?: (number | Brand)[] | null;
  /**
   * Manually select products to display
   */
  products?: (number | Product)[] | null;
  limit?: number | null;
  columns?: ('two' | 'three' | 'four' | 'five' | 'six') | null;
  /**
   * Display category, brand, and price filters
   */
  showFilters?: boolean | null;
  /**
   * Allow users to sort by price, name, date, etc.
   */
  showSorting?: boolean | null;
  /**
   * Enable pagination for large product sets
   */
  showPagination?: boolean | null;
  /**
   * Allow users to preview products without leaving the page
   */
  enableQuickView?: boolean | null;
  /**
   * Display wishlist/favorite button on product cards
   */
  enableWishlist?: boolean | null;
  /**
   * Allow users to compare products
   */
  showCompare?: boolean | null;
  cardStyle?: ('standard' | 'minimal' | 'detailed' | 'compact') | null;
  /**
   * Display "New", "Sale", "Out of Stock" badges
   */
  showProductBadges?: boolean | null;
  backgroundColor?: ('transparent' | 'white' | 'light' | 'dark') | null;
  spacing?: ('none' | 'small' | 'normal' | 'large') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'productGrid';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ShoppingCartBlock".
 */
export interface ShoppingCartBlock {
  /**
   * Title displayed at the top of the cart
   */
  title?: string | null;
  /**
   * Display recommended products below the cart
   */
  showRecommendations?: boolean | null;
  /**
   * Allow customers to enter discount codes
   */
  enablePromoCode?: boolean | null;
  /**
   * Allow customers to move items to wishlist
   */
  enableSaveForLater?: boolean | null;
  /**
   * URL for the "Continue Shopping" button
   */
  continueShoppingUrl?: string | null;
  /**
   * URL for the checkout page
   */
  checkoutUrl?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'shoppingCart';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CheckoutBlock".
 */
export interface CheckoutBlock {
  title?: string | null;
  /**
   * Allow customers to checkout without creating an account
   */
  enableGuestCheckout?: boolean | null;
  /**
   * Make phone number a required field
   */
  requirePhoneNumber?: boolean | null;
  /**
   * Enable Google Places address autocomplete
   */
  enableAddressAutocomplete?: boolean | null;
  defaultCountry?: ('KE' | 'UG' | 'TZ' | 'RW') | null;
  /**
   * Configure which payment methods are available
   */
  paymentMethods?:
    | {
        method: 'mpesa' | 'credit_card' | 'debit_card' | 'bank_transfer' | 'cod';
        enabled?: boolean | null;
        processingFee?: number | null;
        /**
         * Description shown to customers
         */
        description?: string | null;
        id?: string | null;
      }[]
    | null;
  shippingMethods?:
    | {
        name: string;
        description?: string | null;
        cost: number;
        estimatedDays?: number | null;
        freeShippingThreshold?: number | null;
        id?: string | null;
      }[]
    | null;
  termsUrl?: string | null;
  privacyUrl?: string | null;
  orderSuccessUrl?: string | null;
  orderFailureUrl?: string | null;
  /**
   * Allow customers to add notes to their order
   */
  enableOrderNotes?: boolean | null;
  /**
   * Show newsletter signup option during checkout
   */
  enableNewsletter?: boolean | null;
  taxSettings?: {
    taxRate?: number | null;
    taxIncluded?: boolean | null;
    taxLabel?: string | null;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'checkout';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "POSBlock".
 */
export interface POSBlock {
  title?: string | null;
  /**
   * Name of the store location
   */
  storeName: string;
  /**
   * Require staff to login before using POS
   */
  cashierRequired?: boolean | null;
  /**
   * Allow products to be added by scanning barcodes
   */
  enableBarcodeScanning?: boolean | null;
  /**
   * Show order details to customer on a second screen
   */
  enableCustomerDisplay?: boolean | null;
  /**
   * Print receipts automatically after payment
   */
  enableReceiptPrinting?: boolean | null;
  /**
   * Connect to cash drawer hardware
   */
  enableCashDrawer?: boolean | null;
  /**
   * Categories to show as quick access buttons
   */
  quickSaleCategories?: (number | Category)[] | null;
  paymentMethods?:
    | {
        method: 'cash' | 'mpesa' | 'credit_card' | 'debit_card' | 'store_credit';
        enabled?: boolean | null;
        /**
         * Method requires card reader or other hardware
         */
        requiresHardware?: boolean | null;
        id?: string | null;
      }[]
    | null;
  receiptSettings?: {
    headerText?: string | null;
    footerText?: string | null;
    showLogo?: boolean | null;
    logo?: (number | null) | Media;
  };
  taxSettings?: {
    defaultTaxRate?: number | null;
    taxIncluded?: boolean | null;
  };
  discountSettings?: {
    enableLineItemDiscounts?: boolean | null;
    enableOrderDiscounts?: boolean | null;
    maxDiscountPercent?: number | null;
    requireManagerApproval?: boolean | null;
    managerApprovalThreshold?: number | null;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'pos';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "AnalyticsDashboardBlock".
 */
export interface AnalyticsDashboardBlock {
  title?: string | null;
  dateRange?:
    | (
        | 'today'
        | 'yesterday'
        | 'last_7_days'
        | 'last_30_days'
        | 'last_90_days'
        | 'this_month'
        | 'last_month'
        | 'this_year'
        | 'custom'
      )
    | null;
  /**
   * Configure which analytics widgets to display
   */
  widgets?:
    | {
        type:
          | 'sales_overview'
          | 'revenue_chart'
          | 'order_stats'
          | 'top_products'
          | 'customer_analytics'
          | 'inventory_alerts'
          | 'payment_methods'
          | 'geographic_sales'
          | 'conversion_funnel'
          | 'recent_orders';
        /**
         * Custom title for this widget (optional)
         */
        title?: string | null;
        size?: ('small' | 'medium' | 'large' | 'full') | null;
        enabled?: boolean | null;
        refreshInterval?: ('none' | '1m' | '5m' | '15m' | '1h') | null;
        id?: string | null;
      }[]
    | null;
  permissions?: {
    /**
     * Which user roles can view this dashboard
     */
    allowedRoles?: ('admin' | 'manager' | 'staff')[] | null;
    /**
     * Hide revenue and profit data from non-admin users
     */
    hideFinancials?: boolean | null;
  };
  exportOptions?: {
    enablePdfExport?: boolean | null;
    enableCsvExport?: boolean | null;
    /**
     * Allow users to schedule automatic report generation
     */
    enableScheduledReports?: boolean | null;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'analyticsDashboard';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InventoryManagementBlock".
 */
export interface InventoryManagementBlock {
  title?: string | null;
  /**
   * Allow bulk stock updates and transfers
   */
  enableBulkActions?: boolean | null;
  /**
   * Show low stock and out of stock alerts
   */
  enableStockAlerts?: boolean | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'inventoryManagement';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "OrderConfirmationBlock".
 */
export interface OrderConfirmationBlock {
  title?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'orderConfirmation';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders".
 */
export interface Order {
  id: number;
  orderNumber: string;
  customer: number | User;
  items: {
    product: number | Product;
    quantity: number;
    price: number;
    selectedVariants?: {
      size?: string | null;
      color?: string | null;
    };
    id?: string | null;
  }[];
  subtotal: number;
  shipping: {
    method: string;
    cost: number;
    address: {
      firstName: string;
      lastName: string;
      address: string;
      apartment?: string | null;
      city: string;
      state: string;
      zipCode: string;
      country: string;
    };
  };
  tax: number;
  total: number;
  payment: {
    method: 'card' | 'paypal' | 'apple_pay' | 'google_pay' | 'mpesa' | 'cash';
    status: 'pending' | 'paid' | 'failed' | 'refunded' | 'partial';
    transactionId?: string | null;
    amountPaid?: number | null;
    remainingBalance?: number | null;
  };
  paymentInstallments?:
    | {
        amount: number;
        method: 'cash' | 'mpesa' | 'card';
        transactionId?: string | null;
        paidAt: string;
        notes?: string | null;
        id?: string | null;
      }[]
    | null;
  status: 'pending' | 'confirmed' | 'processing' | 'shipped' | 'delivered' | 'cancelled' | 'refunded';
  tracking?: {
    carrier?: string | null;
    trackingNumber?: string | null;
    trackingUrl?: string | null;
  };
  notes?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Manage customer information and order history
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "customers".
 */
export interface Customer {
  id: number;
  firstName: string;
  lastName: string;
  /**
   * Auto-generated from first and last name
   */
  fullName?: string | null;
  email: string;
  phone?: string | null;
  dateOfBirth?: string | null;
  gender?: ('male' | 'female' | 'other' | 'not_specified') | null;
  /**
   * Internal notes about this customer
   */
  notes?: string | null;
  addresses?:
    | {
        label: string;
        firstName: string;
        lastName: string;
        company?: string | null;
        address1: string;
        address2?: string | null;
        city: string;
        state?: string | null;
        zipCode?: string | null;
        country: 'KE' | 'UG' | 'TZ' | 'RW' | 'OTHER';
        isDefault?: boolean | null;
        id?: string | null;
      }[]
    | null;
  /**
   * All orders placed by this customer
   */
  orders?: (number | Order)[] | null;
  totalOrders?: number | null;
  totalSpent?: number | null;
  lastOrderDate?: string | null;
  averageOrderValue?: number | null;
  preferences?: {
    /**
     * Customer consents to receive marketing emails
     */
    emailMarketing?: boolean | null;
    /**
     * Customer consents to receive SMS notifications
     */
    smsMarketing?: boolean | null;
    /**
     * Product categories this customer is interested in
     */
    favoriteCategories?: (number | Category)[] | null;
    size?: ('XS' | 'S' | 'M' | 'L' | 'XL' | 'XXL') | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * Track inventory levels and stock movements
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "inventory".
 */
export interface Inventory {
  id: number;
  /**
   * The product this inventory record tracks
   */
  product: number | Product;
  /**
   * Auto-populated from product
   */
  productName?: string | null;
  /**
   * Auto-populated from product
   */
  sku?: string | null;
  currentStock: number;
  /**
   * Low stock alert threshold
   */
  minStockLevel: number;
  /**
   * Maximum recommended stock level
   */
  maxStockLevel?: number | null;
  /**
   * Automatic reorder trigger point
   */
  reorderPoint?: number | null;
  /**
   * Current stock status
   */
  status: 'in_stock' | 'low_stock' | 'out_of_stock' | 'discontinued';
  location?: {
    warehouse?: string | null;
    aisle?: string | null;
    shelf?: string | null;
    bin?: string | null;
  };
  /**
   * Automatic log of all stock changes
   */
  stockMovements?:
    | {
        type: 'sale' | 'restock' | 'return' | 'damage' | 'loss' | 'adjustment';
        quantity: number;
        previousStock: number;
        newStock: number;
        reason: string;
        /**
         * Order number, supplier reference, etc.
         */
        reference?: string | null;
        /**
         * User who made this change
         */
        user?: (number | null) | User;
        timestamp: string;
        id?: string | null;
      }[]
    | null;
  supplier?: {
    name?: string | null;
    contact?: string | null;
    phone?: string | null;
    email?: string | null;
    /**
     * Time it takes to receive new stock
     */
    leadTime?: number | null;
  };
  costInfo?: {
    lastPurchasePrice?: number | null;
    averageCost?: number | null;
    lastPurchaseDate?: string | null;
  };
  /**
   * Additional notes about this inventory item
   */
  notes?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * All financial transactions including sales, refunds, and adjustments
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "transactions".
 */
export interface Transaction {
  id: number;
  /**
   * Auto-generated unique transaction ID
   */
  transactionId: string;
  type: 'sale' | 'refund' | 'partial_refund' | 'store_credit' | 'payment' | 'adjustment';
  status: 'pending' | 'processing' | 'completed' | 'failed' | 'cancelled' | 'refunded';
  /**
   * Transaction amount in KES
   */
  amount: number;
  currency?: ('KES' | 'USD' | 'EUR') | null;
  /**
   * Related order (if applicable)
   */
  order?: (number | null) | Order;
  /**
   * Customer involved in this transaction
   */
  customer?: (number | null) | User;
  paymentMethod: 'cash' | 'mpesa' | 'credit_card' | 'debit_card' | 'bank_transfer' | 'store_credit' | 'other';
  /**
   * Additional notes about this transaction
   */
  notes?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Shopping cart sessions
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "cart".
 */
export interface Cart {
  id: number;
  /**
   * Registered customer (null for guest carts)
   */
  customer?: (number | null) | User;
  /**
   * Session ID for guest carts
   */
  sessionId?: string | null;
  items: {
    product: number | Product;
    quantity: number;
    selectedVariants?: {
      size?: string | null;
      color?: string | null;
    };
    /**
     * Price per unit at time of adding to cart
     */
    unitPrice: number;
    /**
     * quantity × unitPrice
     */
    lineTotal?: number | null;
    addedAt?: string | null;
    id?: string | null;
  }[];
  itemsCount?: number | null;
  subtotal?: number | null;
  total?: number | null;
  status: 'active' | 'abandoned' | 'converted' | 'expired';
  coupon?: {
    code?: string | null;
    discountType?: ('percentage' | 'fixed') | null;
    discountValue?: number | null;
    discountAmount?: number | null;
  };
  shippingEstimate?: {
    method?: string | null;
    cost?: number | null;
    estimatedDays?: number | null;
  };
  /**
   * When this cart expires (for cleanup)
   */
  expiresAt?: string | null;
  /**
   * Customer notes or special instructions
   */
  notes?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects".
 */
export interface Redirect {
  id: number;
  /**
   * You will need to rebuild the website when changing this field.
   */
  from: string;
  to?: {
    type?: ('reference' | 'custom') | null;
    reference?:
      | ({
          relationTo: 'pages';
          value: number | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: number | Post;
        } | null);
    url?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions".
 */
export interface FormSubmission {
  id: number;
  form: number | Form;
  submissionData?:
    | {
        field: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This is a collection of automatically created search results. These results are used by the global site search and will be updated automatically as documents in the CMS are created or updated.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search".
 */
export interface Search {
  id: number;
  title?: string | null;
  priority?: number | null;
  doc:
    | {
        relationTo: 'posts';
        value: number | Post;
      }
    | {
        relationTo: 'products';
        value: number | Product;
      }
    | {
        relationTo: 'brands';
        value: number | Brand;
      };
  slug?: string | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: (number | null) | Media;
  };
  categories?:
    | {
        relationTo?: string | null;
        categoryID?: string | null;
        title?: string | null;
        id?: string | null;
      }[]
    | null;
  sku?: string | null;
  barcode?: string | null;
  price?: number | null;
  originalPrice?: number | null;
  brand?: {
    name?: string | null;
    slug?: string | null;
  };
  status?: ('draft' | 'published' | 'archived') | null;
  inStock?: number | null;
  /**
   * Higher values appear first in search results
   */
  searchPriority?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs".
 */
export interface PayloadJob {
  id: number;
  /**
   * Input data provided to the job
   */
  input?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  taskStatus?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  completedAt?: string | null;
  totalTried?: number | null;
  /**
   * If hasError is true this job will not be retried
   */
  hasError?: boolean | null;
  /**
   * If hasError is true, this is the error that caused it
   */
  error?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Task execution log
   */
  log?:
    | {
        executedAt: string;
        completedAt: string;
        taskSlug: 'inline' | 'schedulePublish';
        taskID: string;
        input?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        output?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        state: 'failed' | 'succeeded';
        error?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        id?: string | null;
      }[]
    | null;
  taskSlug?: ('inline' | 'schedulePublish') | null;
  queue?: string | null;
  waitUntil?: string | null;
  processing?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'pages';
        value: number | Page;
      } | null)
    | ({
        relationTo: 'posts';
        value: number | Post;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'categories';
        value: number | Category;
      } | null)
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'products';
        value: number | Product;
      } | null)
    | ({
        relationTo: 'orders';
        value: number | Order;
      } | null)
    | ({
        relationTo: 'brands';
        value: number | Brand;
      } | null)
    | ({
        relationTo: 'customers';
        value: number | Customer;
      } | null)
    | ({
        relationTo: 'inventory';
        value: number | Inventory;
      } | null)
    | ({
        relationTo: 'transactions';
        value: number | Transaction;
      } | null)
    | ({
        relationTo: 'cart';
        value: number | Cart;
      } | null)
    | ({
        relationTo: 'redirects';
        value: number | Redirect;
      } | null)
    | ({
        relationTo: 'forms';
        value: number | Form;
      } | null)
    | ({
        relationTo: 'form-submissions';
        value: number | FormSubmission;
      } | null)
    | ({
        relationTo: 'search';
        value: number | Search;
      } | null)
    | ({
        relationTo: 'payload-jobs';
        value: number | PayloadJob;
      } | null)
    | ({
        relationTo: 'payload-folders';
        value: number | FolderInterface;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  hero?:
    | T
    | {
        type?: T;
        mediaType?: T;
        richText?: T;
        slides?:
          | T
          | {
              image?: T;
              mobileImage?: T;
              title?: T;
              subtitle?: T;
              links?:
                | T
                | {
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          appearance?: T;
                        };
                    id?: T;
                  };
              textPosition?: T;
              id?: T;
            };
        links?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    appearance?: T;
                  };
              id?: T;
            };
        media?: T;
        autoplay?: T;
        autoplayDelay?: T;
      };
  layout?:
    | T
    | {
        cta?: T | CallToActionBlockSelect<T>;
        content?: T | ContentBlockSelect<T>;
        mediaBlock?: T | MediaBlockSelect<T>;
        archive?: T | ArchiveBlockSelect<T>;
        formBlock?: T | FormBlockSelect<T>;
        dataTable?: T | DataTableBlockSelect<T>;
        categoryShowcase?: T | CategoryShowcaseBlockSelect<T>;
        productShowcase?: T | ProductShowcaseBlockSelect<T>;
        productGrid?: T | ProductGridBlockSelect<T>;
        shoppingCart?: T | ShoppingCartBlockSelect<T>;
        checkout?: T | CheckoutBlockSelect<T>;
        pos?: T | POSBlockSelect<T>;
        analyticsDashboard?: T | AnalyticsDashboardBlockSelect<T>;
        inventoryManagement?: T | InventoryManagementBlockSelect<T>;
        orderConfirmation?: T | OrderConfirmationBlockSelect<T>;
      };
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock_select".
 */
export interface CallToActionBlockSelect<T extends boolean = true> {
  richText?: T;
  links?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock_select".
 */
export interface ContentBlockSelect<T extends boolean = true> {
  columns?:
    | T
    | {
        size?: T;
        richText?: T;
        enableLink?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock_select".
 */
export interface MediaBlockSelect<T extends boolean = true> {
  media?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArchiveBlock_select".
 */
export interface ArchiveBlockSelect<T extends boolean = true> {
  introContent?: T;
  populateBy?: T;
  relationTo?: T;
  categories?: T;
  limit?: T;
  selectedDocs?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock_select".
 */
export interface FormBlockSelect<T extends boolean = true> {
  form?: T;
  enableIntro?: T;
  introContent?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "DataTableBlock_select".
 */
export interface DataTableBlockSelect<T extends boolean = true> {
  targetCollection?: T;
  filters?:
    | T
    | {
        column?: T;
        title?: T;
        options?:
          | T
          | {
              label?: T;
              value?: T;
              id?: T;
            };
        id?: T;
      };
  defaultPageSize?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CategoryShowcaseBlock_select".
 */
export interface CategoryShowcaseBlockSelect<T extends boolean = true> {
  title?: T;
  subtitle?: T;
  categories?:
    | T
    | {
        category?: T;
        customImage?: T;
        customTitle?: T;
        featured?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ProductShowcaseBlock_select".
 */
export interface ProductShowcaseBlockSelect<T extends boolean = true> {
  title?: T;
  subtitle?: T;
  layout?: T;
  products?: T;
  showPricing?: T;
  showDescription?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ProductGridBlock_select".
 */
export interface ProductGridBlockSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  displayMode?: T;
  categories?: T;
  brands?: T;
  products?: T;
  limit?: T;
  columns?: T;
  showFilters?: T;
  showSorting?: T;
  showPagination?: T;
  enableQuickView?: T;
  enableWishlist?: T;
  showCompare?: T;
  cardStyle?: T;
  showProductBadges?: T;
  backgroundColor?: T;
  spacing?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ShoppingCartBlock_select".
 */
export interface ShoppingCartBlockSelect<T extends boolean = true> {
  title?: T;
  showRecommendations?: T;
  enablePromoCode?: T;
  enableSaveForLater?: T;
  continueShoppingUrl?: T;
  checkoutUrl?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CheckoutBlock_select".
 */
export interface CheckoutBlockSelect<T extends boolean = true> {
  title?: T;
  enableGuestCheckout?: T;
  requirePhoneNumber?: T;
  enableAddressAutocomplete?: T;
  defaultCountry?: T;
  paymentMethods?:
    | T
    | {
        method?: T;
        enabled?: T;
        processingFee?: T;
        description?: T;
        id?: T;
      };
  shippingMethods?:
    | T
    | {
        name?: T;
        description?: T;
        cost?: T;
        estimatedDays?: T;
        freeShippingThreshold?: T;
        id?: T;
      };
  termsUrl?: T;
  privacyUrl?: T;
  orderSuccessUrl?: T;
  orderFailureUrl?: T;
  enableOrderNotes?: T;
  enableNewsletter?: T;
  taxSettings?:
    | T
    | {
        taxRate?: T;
        taxIncluded?: T;
        taxLabel?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "POSBlock_select".
 */
export interface POSBlockSelect<T extends boolean = true> {
  title?: T;
  storeName?: T;
  cashierRequired?: T;
  enableBarcodeScanning?: T;
  enableCustomerDisplay?: T;
  enableReceiptPrinting?: T;
  enableCashDrawer?: T;
  quickSaleCategories?: T;
  paymentMethods?:
    | T
    | {
        method?: T;
        enabled?: T;
        requiresHardware?: T;
        id?: T;
      };
  receiptSettings?:
    | T
    | {
        headerText?: T;
        footerText?: T;
        showLogo?: T;
        logo?: T;
      };
  taxSettings?:
    | T
    | {
        defaultTaxRate?: T;
        taxIncluded?: T;
      };
  discountSettings?:
    | T
    | {
        enableLineItemDiscounts?: T;
        enableOrderDiscounts?: T;
        maxDiscountPercent?: T;
        requireManagerApproval?: T;
        managerApprovalThreshold?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "AnalyticsDashboardBlock_select".
 */
export interface AnalyticsDashboardBlockSelect<T extends boolean = true> {
  title?: T;
  dateRange?: T;
  widgets?:
    | T
    | {
        type?: T;
        title?: T;
        size?: T;
        enabled?: T;
        refreshInterval?: T;
        id?: T;
      };
  permissions?:
    | T
    | {
        allowedRoles?: T;
        hideFinancials?: T;
      };
  exportOptions?:
    | T
    | {
        enablePdfExport?: T;
        enableCsvExport?: T;
        enableScheduledReports?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InventoryManagementBlock_select".
 */
export interface InventoryManagementBlockSelect<T extends boolean = true> {
  title?: T;
  enableBulkActions?: T;
  enableStockAlerts?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "OrderConfirmationBlock_select".
 */
export interface OrderConfirmationBlockSelect<T extends boolean = true> {
  title?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts_select".
 */
export interface PostsSelect<T extends boolean = true> {
  title?: T;
  heroImage?: T;
  content?: T;
  relatedPosts?: T;
  categories?: T;
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  authors?: T;
  populatedAuthors?:
    | T
    | {
        id?: T;
        name?: T;
      };
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        square?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        small?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        medium?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        large?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        xlarge?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        og?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  slugLock?: T;
  parent?: T;
  breadcrumbs?:
    | T
    | {
        doc?: T;
        url?: T;
        label?: T;
        id?: T;
      };
  folder?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  active?: T;
  name?: T;
  avatar?: T;
  roles?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products_select".
 */
export interface ProductsSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  slugLock?: T;
  categories?: T;
  brand?: T;
  description?: T;
  images?:
    | T
    | {
        image?: T;
        alt?: T;
        isPrimary?: T;
        id?: T;
      };
  colors?:
    | T
    | {
        colorName?: T;
        colorCode?: T;
        colorImage?: T;
        id?: T;
      };
  sizes?:
    | T
    | {
        sizeName?: T;
        sizeCode?: T;
        inStock?: T;
        stockQuantity?: T;
        id?: T;
      };
  sku?: T;
  barcode?: T;
  barcodeImage?: T;
  costPrice?: T;
  price?: T;
  originalPrice?: T;
  taxRate?: T;
  maxDiscountPercent?: T;
  inStock?: T;
  lowStockThreshold?: T;
  trackInventory?: T;
  status?: T;
  currency?: T;
  weight?: T;
  dimensions?:
    | T
    | {
        length?: T;
        width?: T;
        height?: T;
      };
  shippingClass?: T;
  shippingNotes?: T;
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders_select".
 */
export interface OrdersSelect<T extends boolean = true> {
  orderNumber?: T;
  customer?: T;
  items?:
    | T
    | {
        product?: T;
        quantity?: T;
        price?: T;
        selectedVariants?:
          | T
          | {
              size?: T;
              color?: T;
            };
        id?: T;
      };
  subtotal?: T;
  shipping?:
    | T
    | {
        method?: T;
        cost?: T;
        address?:
          | T
          | {
              firstName?: T;
              lastName?: T;
              address?: T;
              apartment?: T;
              city?: T;
              state?: T;
              zipCode?: T;
              country?: T;
            };
      };
  tax?: T;
  total?: T;
  payment?:
    | T
    | {
        method?: T;
        status?: T;
        transactionId?: T;
        amountPaid?: T;
        remainingBalance?: T;
      };
  paymentInstallments?:
    | T
    | {
        amount?: T;
        method?: T;
        transactionId?: T;
        paidAt?: T;
        notes?: T;
        id?: T;
      };
  status?: T;
  tracking?:
    | T
    | {
        carrier?: T;
        trackingNumber?: T;
        trackingUrl?: T;
      };
  notes?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "brands_select".
 */
export interface BrandsSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  slugLock?: T;
  description?: T;
  logo?: T;
  website?: T;
  isActive?: T;
  contact?:
    | T
    | {
        email?: T;
        phone?: T;
        address?:
          | T
          | {
              street?: T;
              city?: T;
              country?: T;
            };
      };
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "customers_select".
 */
export interface CustomersSelect<T extends boolean = true> {
  firstName?: T;
  lastName?: T;
  fullName?: T;
  email?: T;
  phone?: T;
  dateOfBirth?: T;
  gender?: T;
  notes?: T;
  addresses?:
    | T
    | {
        label?: T;
        firstName?: T;
        lastName?: T;
        company?: T;
        address1?: T;
        address2?: T;
        city?: T;
        state?: T;
        zipCode?: T;
        country?: T;
        isDefault?: T;
        id?: T;
      };
  orders?: T;
  totalOrders?: T;
  totalSpent?: T;
  lastOrderDate?: T;
  averageOrderValue?: T;
  preferences?:
    | T
    | {
        emailMarketing?: T;
        smsMarketing?: T;
        favoriteCategories?: T;
        size?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "inventory_select".
 */
export interface InventorySelect<T extends boolean = true> {
  product?: T;
  productName?: T;
  sku?: T;
  currentStock?: T;
  minStockLevel?: T;
  maxStockLevel?: T;
  reorderPoint?: T;
  status?: T;
  location?:
    | T
    | {
        warehouse?: T;
        aisle?: T;
        shelf?: T;
        bin?: T;
      };
  stockMovements?:
    | T
    | {
        type?: T;
        quantity?: T;
        previousStock?: T;
        newStock?: T;
        reason?: T;
        reference?: T;
        user?: T;
        timestamp?: T;
        id?: T;
      };
  supplier?:
    | T
    | {
        name?: T;
        contact?: T;
        phone?: T;
        email?: T;
        leadTime?: T;
      };
  costInfo?:
    | T
    | {
        lastPurchasePrice?: T;
        averageCost?: T;
        lastPurchaseDate?: T;
      };
  notes?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "transactions_select".
 */
export interface TransactionsSelect<T extends boolean = true> {
  transactionId?: T;
  type?: T;
  status?: T;
  amount?: T;
  currency?: T;
  order?: T;
  customer?: T;
  paymentMethod?: T;
  notes?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "cart_select".
 */
export interface CartSelect<T extends boolean = true> {
  customer?: T;
  sessionId?: T;
  items?:
    | T
    | {
        product?: T;
        quantity?: T;
        selectedVariants?:
          | T
          | {
              size?: T;
              color?: T;
            };
        unitPrice?: T;
        lineTotal?: T;
        addedAt?: T;
        id?: T;
      };
  itemsCount?: T;
  subtotal?: T;
  total?: T;
  status?: T;
  coupon?:
    | T
    | {
        code?: T;
        discountType?: T;
        discountValue?: T;
        discountAmount?: T;
      };
  shippingEstimate?:
    | T
    | {
        method?: T;
        cost?: T;
        estimatedDays?: T;
      };
  expiresAt?: T;
  notes?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects_select".
 */
export interface RedirectsSelect<T extends boolean = true> {
  from?: T;
  to?:
    | T
    | {
        type?: T;
        reference?: T;
        url?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms_select".
 */
export interface FormsSelect<T extends boolean = true> {
  title?: T;
  fields?:
    | T
    | {
        checkbox?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              defaultValue?: T;
              id?: T;
              blockName?: T;
            };
        country?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        email?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        message?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        number?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        select?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              placeholder?: T;
              options?:
                | T
                | {
                    label?: T;
                    value?: T;
                    id?: T;
                  };
              required?: T;
              id?: T;
              blockName?: T;
            };
        state?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        text?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        textarea?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
      };
  submitButtonLabel?: T;
  confirmationType?: T;
  confirmationMessage?: T;
  redirect?:
    | T
    | {
        url?: T;
      };
  emails?:
    | T
    | {
        emailTo?: T;
        cc?: T;
        bcc?: T;
        replyTo?: T;
        emailFrom?: T;
        subject?: T;
        message?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions_select".
 */
export interface FormSubmissionsSelect<T extends boolean = true> {
  form?: T;
  submissionData?:
    | T
    | {
        field?: T;
        value?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search_select".
 */
export interface SearchSelect<T extends boolean = true> {
  title?: T;
  priority?: T;
  doc?: T;
  slug?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  categories?:
    | T
    | {
        relationTo?: T;
        categoryID?: T;
        title?: T;
        id?: T;
      };
  sku?: T;
  barcode?: T;
  price?: T;
  originalPrice?: T;
  brand?:
    | T
    | {
        name?: T;
        slug?: T;
      };
  status?: T;
  inStock?: T;
  searchPriority?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs_select".
 */
export interface PayloadJobsSelect<T extends boolean = true> {
  input?: T;
  taskStatus?: T;
  completedAt?: T;
  totalTried?: T;
  hasError?: T;
  error?: T;
  log?:
    | T
    | {
        executedAt?: T;
        completedAt?: T;
        taskSlug?: T;
        taskID?: T;
        input?: T;
        output?: T;
        state?: T;
        error?: T;
        id?: T;
      };
  taskSlug?: T;
  queue?: T;
  waitUntil?: T;
  processing?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-folders_select".
 */
export interface PayloadFoldersSelect<T extends boolean = true> {
  name?: T;
  folder?: T;
  documentsAndFolders?: T;
  folderType?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: number;
  navItems?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          label: string;
        };
        subLinks?:
          | {
              link: {
                type?: ('reference' | 'custom') | null;
                newTab?: boolean | null;
                reference?:
                  | ({
                      relationTo: 'pages';
                      value: number | Page;
                    } | null)
                  | ({
                      relationTo: 'posts';
                      value: number | Post;
                    } | null);
                url?: string | null;
                label: string;
              };
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: number;
  copyright: string;
  navItems?:
    | {
        title: string;
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header_select".
 */
export interface HeaderSelect<T extends boolean = true> {
  navItems?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        subLinks?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                  };
              id?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  copyright?: T;
  navItems?:
    | T
    | {
        title?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TaskSchedulePublish".
 */
export interface TaskSchedulePublish {
  input: {
    type?: ('publish' | 'unpublish') | null;
    locale?: string | null;
    doc?:
      | ({
          relationTo: 'pages';
          value: number | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: number | Post;
        } | null)
      | ({
          relationTo: 'products';
          value: number | Product;
        } | null);
    global?: string | null;
    user?: (number | null) | User;
  };
  output?: unknown;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BannerBlock".
 */
export interface BannerBlock {
  style: 'info' | 'warning' | 'error' | 'success';
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'banner';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CodeBlock".
 */
export interface CodeBlock {
  language?: ('typescript' | 'javascript' | 'css') | null;
  code: string;
  id?: string | null;
  blockName?: string | null;
  blockType: 'code';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}